apiVersion: apps/v1
kind: Deployment
metadata:
  name: product-service
spec:
  selector:
    matchLabels:
      app: product-service
  replicas: 1
  template:
    metadata:
      labels:
        app: product-service
    spec:
      containers:
      - name: product-service
        image: markusceder/product-service:v1
        ports:
        - containerPort: 8000
        env:
        - name: DB_HOST
          value: "product-db"
        - name: DB_USER
          value: "test"
        - name: DB_PASSWORD
          value: "pass"
        - name: DB_NAME
          value: "productdb"

---

apiVersion: v1
kind: Service
metadata:
  name: product-service
spec:
  selector:
    app: product-service
  ports:
    - port: 8000
      targetPort: 8000
  type: ClusterIP



---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: customer-service
spec:
  selector:
    matchLabels:
      app: customer-service
  replicas: 1
  template:
    metadata:
      labels:
        app: customer-service
    spec:
      containers:
      - name: customer-service
        image: markusceder/customer-service:v1
        ports:
        - containerPort: 8000
        env:
        - name: DB_HOST
          value: "customer-db"
        - name: DB_USER
          value: "test"
        - name: DB_PASSWORD
          value: "pass"
        - name: DB_NAME
          value: "customerdb"

---

apiVersion: v1
kind: Service
metadata:
  name: customer-service
spec:
  selector:
    app: customer-service
  ports:
    - port: 8000
      targetPort: 8000
  type: ClusterIP


---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  selector:
    matchLabels:
      app: frontend
  replicas: 1 
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend
        image: markusceder/frontend:v1
        ports:
        - containerPort: 80

---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
spec:
  type: LoadBalancer
  ports:
  - name: http
    port: 80
    targetPort: 80
    nodePort: 30001
    protocol: TCP
  selector:
    app: frontend